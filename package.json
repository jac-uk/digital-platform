{
  "name": "jac-digital-platform",
  "version": "1.67.0",
  "description": "Firebase/GCP configuration and components for the JAC digital platform",
  "repository": "https://github.com/jac-uk/digital-platform",
  "license": "MIT",
  "readme": "README.md",
  "engines": {
    "node": "16"
  },
  "scripts": {
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "dev": "firebase emulators:start --import=./data/ --export-on-exit=./data --project=digital-platform-develop",
    "serve": "firebase emulators:start --import=./data/  --project=digital-platform-develop",
    "shell": "firebase functions:shell --project=digital-platform-develop",
    "emulators:kill": "lsof -t -i tcp:9099 | xargs kill && lsof -t -i tcp:5001 | xargs kill && lsof -t -i tcp:8080 | xargs kill && lsof -t -i tcp:9000 | xargs kill && lsof -t -i tcp:8085 | xargs kill && lsof -t -i tcp:9199 | xargs kill && lsof -t -i tcp:4500 | xargs kill && lsof -t -i tcp:9150 | xargs kill && lsof -t -i tcp:4000 | xargs kill",
    "emulators:firestore": "firebase emulators:start --only firestore  --project=digital-platform-develop",
    "start": "npm run shell",
    "logs": "firebase functions:log",
    "local:nodeScript": "export GOOGLE_APPLICATION_CREDENTIALS='service-account.json' && export FIRESTORE_EMULATOR_HOST='localhost:8080' && run(){ node -r dotenv/config nodeScripts/$1; }; run",
    "nodeScript": "export GOOGLE_APPLICATION_CREDENTIALS='service-account.json' && run(){ node -r dotenv/config nodeScripts/$1; }; run",
    "staging:nodeScript": "export GOOGLE_APPLICATION_CREDENTIALS='service-account.staging.json' && run(){ node -r dotenv/config nodeScripts/$1; }; run",
    "production:nodeScript": "export GOOGLE_APPLICATION_CREDENTIALS='service-account.production.json' && run(){ node -r dotenv/config nodeScripts/$1; }; run",
    "nodeScriptOnWindows": "set GOOGLE_APPLICATION_CREDENTIALS=service-account.json&& node -r dotenv/config nodeScripts/%SCRIPT%",
    "indexes:export": "firebase firestore:indexes > database/firestore.indexes.json",
    "deploy:rules": "firebase deploy --project=digital-platform-develop --only firestore:rules",
    "deploy:indexes": "firebase deploy --project=digital-platform-develop --only firestore:indexes",
    "deploy:functions": "firebase deploy --project=digital-platform-develop --only functions --force",
    "deploy:function": "run(){ firebase deploy --project=digital-platform-develop --only functions:$1; }; run",
    "deploy:storage-rules": "firebase deploy --project=digital-platform-develop --only storage",
    "staging:deploy:rules": "firebase deploy --project=digital-platform-staging --only firestore:rules",
    "staging:deploy:indexes": "firebase deploy --project=digital-platform-staging --only firestore:indexes",
    "staging:deploy:functions": "firebase deploy --project=digital-platform-staging --only functions --force",
    "staging:deploy:function": "run(){ firebase deploy --project=digital-platform-staging --only functions:$1; }; run",
    "staging:deploy:storage-rules": "firebase deploy --project=digital-platform-staging --only storage",
    "production:deploy:rules": "firebase deploy --project=platform-production-9207d --only firestore:rules",
    "production:deploy:indexes": "firebase deploy --project=platform-production-9207d --only firestore:indexes --force",
    "production:deploy:functions": "firebase deploy --project=platform-production-9207d --only functions --force",
    "production:deploy:function": "run(){ firebase deploy --project=platform-production-9207d --only functions:$1; }; run",
    "production:deploy:storage-rules": "firebase deploy --project=platform-production-9207d --only storage",
    "test:rules": "export FIRESTORE_EMULATOR_HOST='localhost:8080' && mocha './test/rules/**/*.spec.js' --timeout=10000",
    "test:rule": "export FIRESTORE_EMULATOR_HOST='localhost:8080' && mocha './test/rules/**/1.database.spec.js' --timeout=10000",
    "test:functions": "mocha './test/functions/**/*.spec.js' --timeout=10000",
    "test:actions": "jest test/actions",
    "test:shared": "jest test/shared",
    "watch:test:rules": "export FIRESTORE_EMULATOR_HOST='localhost:8080' && mocha './test/rules/**/*.spec.js' --timeout=10000 --reporter=min --watch --watch-extensions=rules",
    "ci:test:rules": "firebase emulators:exec --only firestore 'npm run test:rules'",
    "service-offline:rules": "cp -f ./service-offline/firestore.rules ./database/firestore.rules; npm run deploy:rules",
    "service-offline:storage-rules": "cp -f ./service-offline/storage.rules ./storage/storage.rules; npm run deploy:storage-rules",
    "service-offline": "npm run service-offline:rules; npm run service-offline:storage-rules",
    "service-online": "npm run deploy:rules; npm run deploy:storage-rules",
    "staging:service-offline:rules": "cp -f ./service-offline/firestore.rules ./database/firestore.rules; npm run staging:deploy:rules",
    "staging:service-offline:storage-rules": "cp -f ./service-offline/storage.rules ./storage/storage.rules; npm run staging:deploy:storage-rules",
    "staging:service-offline": "npm run staging:service-offline:rules; npm run staging:service-offline:storage-rules",
    "staging:service-online": "npm run staging:deploy:rules; npm run staging:deploy:storage-rules",
    "production:service-offline:rules": "cp -f ./service-offline/firestore.rules ./database/firestore.rules; npm run production:deploy:rules",
    "production:service-offline:storage-rules": "cp -f ./service-offline/storage.rules ./storage/storage.rules; npm run production:deploy:storage-rules",
    "production:service-offline": "npm run production:service-offline:rules; npm run production:service-offline:storage-rules",
    "production:service-online": "npm run production:deploy:rules; npm run production:deploy:storage-rules"
  },
  "dependencies": {
    "@google-cloud/storage": "^5.7.2",
    "axios": "^0.21.2",
    "bottleneck": "^2.19.5",
    "firebase": "^8.4.3",
    "firebase-admin": "^9.7.0",
    "firebase-functions": "^3.24.1",
    "firebase-functions-test": "^0.2.3",
    "firebase-tools": "^11.21.0",
    "googleapis": "^67.0.0",
    "lodash": "^4.17.21",
    "mammoth": "^1.6.0",
    "notifications-node-client": "^4.9.0"
  },
  "devDependencies": {
    "@faker-js/faker": "^6.0.0-alpha.5",
    "@firebase/rules-unit-testing": "^1.1.9",
    "@firebase/util": "^1.1.0",
    "csv-writer": "^1.6.0",
    "dotenv": "^8.2.0",
    "eslint": "^7.18.0",
    "eslint-plugin-promise": "^4.2.1",
    "firebase-mock": "^2.2.10",
    "jest": "^25.2.1",
    "mocha": "^6.2.3"
  },
  "private": true
}
