import scanFileInit from './scanFile.js';

export default (config, firebase, db) => {
  const scanFile = scanFileInit(config, firebase);

  return runScannerTest;

  async function runScannerTest() {
    const eicarTestFilePath = 'virusScanner-testFiles/eicar.com.txt';
    const cleanTestFilePath = 'virusScanner-testFiles/nothing.txt';

    // invert file paths to check that correct actions happen should either or both file be found to be what is unexpected.
    // const eicarTestFilePath = 'virusScanner-testFiles/nothing.txt';
    // const cleanTestFilePath = 'virusScanner-testFiles/eicar.com.txt';

    const eicarScanResult = await scanFile(eicarTestFilePath);
    const cleanScanResult = await scanFile(cleanTestFilePath);

    let cleanResultData = cleanScanResult.data ? cleanScanResult.data.status : cleanScanResult.result;
    let eicarResultData = eicarScanResult.data ? eicarScanResult.data.status : eicarScanResult.result;

    const testResults = {
      timestamp: new Date(),
      clean: cleanResultData === 'clean',
      eicar: eicarResultData === 'error',
    };

    const servicesRef = db.doc('settings/candidateSettings');

    // Retrieve existing logs, append the new log entry, and update Firestore
    const doc = await servicesRef.get();
    let logs = [];

    if (doc.exists && doc.data().fileUpload && Array.isArray(doc.data().fileUpload.logs)) {
      logs = doc.data().fileUpload.logs;
    }

    logs.push(testResults);

    await servicesRef.set({
      fileUpload: {
        enabled: testResults.clean && testResults.eicar,
        logs: logs,
      },
    }, { merge: true });

    // TODO trim logs to 50

    if (!testResults.clean || !testResults.eicar) {
      // Send alert
      console.error('Automated test failed:', testResults);
      // Add your alerting mechanism here, e.g., send an email or a Slack message
    } else {
      console.log('Automated test passed:', testResults);
    }
    return testResults;
  }
};
