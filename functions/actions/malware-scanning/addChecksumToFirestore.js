import path from 'path';

export default (firebase, db) => {

  return {
    addChecksumToFirestore,
  };

  /**
   * Adds a checksum to Firestore using the file name as the document ID.
   * Only adds the checksum if it doesn't already exist for the file.
   * @param {string} filePath - The path of the file.
   * @param {string} checksum - The checksum to store.
   * @returns {Promise<string>} - A confirmation message.
   */
  async function addChecksumToFirestore(filePath, checksum) {
    const fileName = path.basename(filePath); // Extract the file name from the file path
    console.log(`Processing checksum for ${fileName}: ${checksum}`);

    const checksumsCollection = db.collection('checksums');
    const docRef = checksumsCollection.doc(fileName); // Use the file name as the document ID

    try {
      const docSnapshot = await docRef.get();

      if (!docSnapshot.exists) {
        // Document does not exist, create it
        await docRef.set({
          filepath: filePath,
          checksum,
          created: firebase.firestore.Timestamp.fromDate(new Date()),
        });
        console.log(`Added checksum for ${fileName}`);
      }

      return `${checksum} processed`;
    } catch (e) {
      console.error(`Error processing checksum for ${fileName}:`, e);
      throw new Error(`Failed to process checksum for ${fileName}`);
    }
  }
};
